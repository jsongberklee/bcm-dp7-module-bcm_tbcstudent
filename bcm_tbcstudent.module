<?php
// $Id: bcm_tbcstudent.module,v 1.5 2011/01/06 23:32:08 sun Exp $
function bcm_tbcstudent_menu() {
	$items = array();
	$items['admin/config/people/bcm_tbcstudent'] = array(
		'title' => 'Add TBC Student settings',
		'description' => '',
		'page callback' => 'drupal_get_form',
		'page arguments' => array('bcm_tbcstudent_admin_form'),
		'access arguments' => array('administer bcm_tbcstudent settings'),
		'type' => MENU_NORMAL_ITEM,
	 );
 	$items['manage/people/bcm_tbcstudent'] = array(
 		'title' => 'Create user account for TBC student',
 		'description' => 'Please note, all fields are required and you must have The Boston Conservatory e-mail address that ends with "@bostonconservatory.edu".',
 		'page callback' => 'drupal_get_form',
 		'page arguments' => array('bcm_tbcstudent_create_form'),
 		'access arguments' => array('create user'),
 		'type' => MENU_NORMAL_ITEM,
 	 );
	return $items;
}
function bcm_tbcstudent_admin_form($form, &$form_state) {

	$roles = user_roles(TRUE);

	$form = array();

	$setting = variable_get('bcm_tbcstudent_roles');

  $form['bcm_tbcstudent_roles'] = array(
    '#type' => 'checkboxes',
    '#title' => 'Select a role to be assigned',
    '#options' => $roles,
    '#description' => t('When an user is created user this module the above selected role(s) will be set automatically'),
    '#required' => true,
    '#multiple' => true,
		'#default_value' => ($setting ? $setting : ''),
  );
	$form['roles_all'] = array(
    '#type' => 'value',
		'#value' => $roles,
  );

	$form = system_settings_form($form);
	$form['#submit'] = array('bcm_tbcstudent_admin_submit');
	return $form;
}

function bcm_tbcstudent_admin_validate($form, &$form_state) {
// proper validation needs to be built
// Regular expresstion to check correct format as well as correct hour and minute information
}

function bcm_tbcstudent_admin_submit(&$form, &$form_state) {
	$values = array();
	$roles = $form_state['values']['roles_all'];
	foreach($form_state['values']['bcm_tbcstudent_roles'] as $key => $value){
		if($value){
			$values[$roles[$key]] = $value;
		}
	}
	variable_set('bcm_tbcstudent_roles', $values);
}

/**
 * Implements hook_permission().
 */
function bcm_tbcstudent_permission() {
  return array(
    'administer bcm_tbcstudent settings' => array(
      'title' => t('Administer bcm_tbcstudent settings'),
    ),
		'create user' => array(
      'title' => t('Create user'),
    ),
  );
}

function bcm_tbcstudent_create_form($form, $form_state) {

  //$account = $form['#user'];
  //$register = ($form['#user']->uid > 0 ? FALSE : TRUE);
	$register = TRUE;
  $admin = user_access('create user');

  $form['#validate'][] = 'bcm_tbcstudent_create_form_validate';

	$form['welcome'] = array('#markup' => '<div id="spp-welcome"><h2>Welcome to Learning Center!</h2><p>Use this form to create accounts for Boston Conservatory students to be able to register for Technology Training sessions.</p><p>Please note, you will not be able to change the password once it is created.</p></div>', '#weight'=> 0);

  // Account information.
  $form['account'] = array(
    '#type'   => 'container',
  );

  $form['account']['displayname'] = array(
    '#type' => 'textfield',
    '#title' => t('Full name'),
    '#maxlength' => 128,
    '#description' => t('Your first and last name, appears on the ID.'),
    '#required' => TRUE,
    '#attributes' => array('class' => array('displayname-tbc'), 'placeholder' => array('e.g: John Smith')),
    '#default_value' => '',
    '#required' => TRUE,
  );

  $form['account']['id'] = array(
    '#type' => 'textfield',
    '#title' => t('The Boston Conservatory Student ID'),
    '#maxlength' => 12,
    '#description' => t('Type your student ID number.'),
    '#required' => TRUE,
		'#attributes' => array('class' => array('id-tbc'), 'placeholder' => array('the id appear on your ID card'),),
    '#default_value' => '',
    '#required' => TRUE,
  );

	$form['account']['name'] = array(
    '#type' => 'textfield',
    '#title' => t('E-mail address'),
    '#maxlength' => EMAIL_MAX_LENGTH,
    '#description' => t('ONLY The Boston Conservatory E-mail is allowed.'),
    '#required' => TRUE,
    '#attributes' => array('class' => array('username-tbc'), 'placeholder' => array('e.g: jsmith1@bostonconservatory.org')),
    '#default_value' => '',
    //'#access' => user_access('create user'),
    '#required' => TRUE,
  );

  $form['account']['mail'] = array(
    '#type' => 'textfield',
    '#title' => t('Confirm E-mail address'),
    '#maxlength' => EMAIL_MAX_LENGTH,
    '#description' => t('Please type in the E-mail adress above to confirm it.'),
    '#required' => TRUE,
		'#attributes' => array('class' => array('mailconfirm-tbc'), 'placeholder' => array('type exactly same as above e-mail field')),
    '#default_value' => '',
  );

  $form['account']['pass'] = array(
    '#type' => 'password_confirm',
    '#size' => 25,
    '#description' => t('Provide a password for the new account in both fields.'),
		'#attributes' => array('class' => array('password-tbc'),),
    '#required' => TRUE,
  );

  $form['account']['notify'] = array(
    '#type' => 'checkbox',
    '#title' => t('Send an email to myself'),
    '#access' => TRUE,
		'#attributes' => array('class' => array('notify-tbc'),),
  );

  $form['submit'] = array (
  	'#type' => 'submit',
  	'#value' => t('Create My Account'),
	);

	return $form;
}
/**
 * Form validation handler for user_account_form().
 *
 * @see user_account_form()
 */
function bcm_tbcstudent_create_form_validate($form, &$form_state) {

	if ($form_state['values']['name'] != $form_state['values']['mail']) { form_set_error('mail', t('The email address fields do not match, please try again.'));	}
	// Trim whitespace from mail, to prevent confusing 'e-mail not valid'
	// warnings often caused by cutting and pasting.
	$mail = trim($form_state['values']['mail']);
	//form_set_value($form['account']['mail'], $mail, $form_state);

	// Validate the e-mail address, and check if it is taken by an existing user.
	if ($error = user_validate_mail($mail)) {
	  form_set_error('mail', $error);
	}

	$mailparts = explode('@', $mail);
	if($mailparts[1] != 'bostonconservatory.edu'){
		form_set_error('name', t('You must use The Boston Conservatory e-mail address, %email is not a valid, please use a valid address', array('%email' => $mail)));
	}

	$userExist = user_load_by_mail($mail);
	if(!empty($userExist)){
		form_set_error('mail', t('The e-mail %email is in the system already, please let us know if you forgot your password.', array('%email' => $mail)));
	}

}
/**
* submit form function
* @description : create a user and redirect to user login page.
*/
function bcm_tbcstudent_create_form_submit($form, &$form_state){
	global $user;

	$roleSet = array_flip(variable_get('bcm_tbcstudent_roles'));

	$fields = array(
		'name' => $form_state['values']['mail'],
		'mail' => $form_state['values']['mail'],
		'pass' => $form_state['values']['pass'],
		'status' => 1,
		'init' => $form_state['values']['mail'],
		'roles' => $roleSet,
		'field_berklee_id' => array('und' => array( 0 => array('value' => $form_state['values']['id'],),),),
		'field_display_name' => array('und' => array( 0 => array('value' => $form_state['values']['displayname'],),),),
		'field_occupation' => array('und' => array( 0 => array('value' => 'The Boston Conservatory Student',),),),
		'field_userbio' => array('und' => array( 0 => array('value' => '[[verified by::'.$user->mail.'::'.$user->uid.']]',),),),
	);

	// for testing purpose
	//form_set_error('', 'In Development, the user did not created'); return;

	$newuser = user_save('', $fields);	$now = date('Y-m-d H:i:s', time());

	drupal_set_message(t('Your account has been created, your username is "'.$newuser->name.'". You may use your device to visit this site and start using the student features this site offers!<br />Please note, we do not email your password for security reason, if you ever need to change the username and/or password, you have to contact Learning Center Staff.'));

	//$form_state['redirect'] = 'home';
}

/**
* Implements hook_init()
* @description : add the sppstudent login to the login link
*/
function bcm_tbcstudent_init() {
	global $user;
	//dsm($user);
  if($user->uid == 0){
		drupal_add_css(drupal_get_path('module', 'bcm_tbcstudent') . '/bcm_tbcstudent.css');
		drupal_add_js(drupal_get_path('module', 'bcm_tbcstudent') . '/bcm_tbcstudent.js');
		$nodeType = menu_get_object()->type;
		//if($nodeType == 't_individual' || $nodeType == 't_class' || $nodeType == 't_core' || $nodeType == 'webform'){
		if($nodeType == 't_individual' || $nodeType == 't_class' || $nodeType == 't_core' || $nodeType == 'webform'){
			$dest = drupal_get_destination();
			drupal_add_js(array('bcm_tbcstudent' => array('login' => '1', 'dest' => $dest['destination'])), array('type' => 'setting'));
		}else{
			drupal_add_js(array('bcm_tbcstudent' => array('login' => '0')), array('type' => 'setting'));
		}
  }elseif($user->uid != 0 && (in_array('student tbc',$user->roles) || in_array('student lc staff',$user->roles))){
		drupal_add_js(drupal_get_path('module', 'bcm_tbcstudent') . '/bcm_tbcstudent-logout.js');
	}

}
/**
* Implements hook_form_FORM_ID_alter()
* @description : insert 'spp/account' link in the general user login block form
*/
function bcm_tbcstudent_form_user_login_block_alter(&$form, &$form_state){
	_bcm_tbcstudent_user_login_form_alter($form, $form_state);
}
/**
* Implements hook_form_FORM_ID_alter()
* @description : insert 'spp/account' link in the general user login form page '/user'
*/
function bcm_tbcstudent_form_user_login_alter(&$form, &$form_state){
	_bcm_tbcstudent_user_login_form_alter($form, $form_state);
}

function _bcm_tbcstudent_user_login_form_alter(&$form, &$form_state){

	drupal_set_title("The Boston Conservatory Student Login");

	$form['name']['#weight'] = 1; $form['pass']['#weight'] = 2;
	$form['tbcstudent'] = array('#markup' => '<div class="messages warning" style="margin-left:0">&nbsp;&nbsp;This login is only for The Boston Conservatory Students.<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;You must visit Learning Center at 150 Massachusetts Ave. 2nd floor to create your account first.</div><div id="sso-link" style="margin:1em 1em 2em 1em;"><a href="/onelogin_saml/sso">Click here for Berklee campus students, faculty, staff, and alumni login page.</a></div>
	', '#weight'=> 0);
	$form['name']['#title'] = "The Boston Conservatory e-mail";
	$form['name']['#description'] = "Type the e-mail address";
	$form['pass']['#description'] = "The password you created for this account";

	//$form['ssolink'] = array('#markup' => '<div id="sso-link"><a href="/onelogin_saml/sso">Click here if you are Berklee campus students, faculty, staff, and alumni.</a></div>', '#weight'=> 100);


	/* this wouldn't work currently due to "noreqnewpass" module *
	$user_login_final_validate_index = array_search('user_login_final_validate', $form['#validate']);
 	if ($user_login_final_validate_index >= 0) {
 	  $form['#validate'][$user_login_final_validate_index] = '_bcm_sppstudent_final_validate';
 	}
	/**/
}


/**/


